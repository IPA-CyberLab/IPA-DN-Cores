新しい ASP.NET Core プロジェクトの作成方法メモ
----------------------------------------------

■ プロジェクトの作成

ソリューションを作成する。

ASP.NET Core Web アプリケーション (C#) を追加する。
    Web アプリケーション (モデル ビュー コントローラ)


■ デバッグ設定の変更

プロファイル「IIS Express」を削除する。

「ブラウザーの起動」を OFF にする。


■ Cores.Lib.Basic.AspNet3.0.Full の追加
ソリューションに
「Cores.Lib.Basic.AspNet3.0.Full\Cores.Lib.Basic.AspNet3.0.Full.csproj」
を追加する。

ASP.NET プロジェクトから Cores.Lib.Basic.AspNet3.0.Full に依存設定をする。


■ Cores.Basic.shproj の追加
ソリューションに
「Cores.Basic.shproj」
を追加する。


■ Cores.Codes.shproj の追加
ソリューションに
「Cores.Codes.shproj」
を追加する。


■ ASP.NET Core プロジェクトの編集
・ csproj

以下のプロパティを <PropertyGroup> に追加
---
    <LangVersion>8.0</LangVersion>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    <GenerateEmbeddedFilesManifest>true</GenerateEmbeddedFilesManifest>
---

既存の </PropertyGroup> の下に以下を追加

---
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DefineConstants>CORES_CODES_ASPNETMVC;</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DefineConstants>TRACE;DEBUG;CORES_CODES_ASPNETMVC;</DefineConstants>
  </PropertyGroup>
---

上記で追加した </PropertyGroup> の下に以下を追加
---
  <ItemGroup>
    <Compile Remove="Local\**" />
    <Compile Remove="Log\**" />
    <Content Remove="Local\**" />
    <Content Remove="Log\**" />
    <EmbeddedResource Remove="Local\**" />
    <EmbeddedResource Remove="Log\**" />
    <None Remove="Local\**" />
    <None Remove="Log\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../../../../Cores.NET/Cores.Codes/**/*.cs" />
    <Content Include="../../../../Cores.NET/Cores.Codes/**/*.cshtml" />
    <EmbeddedResource Include="../../../../Cores.NET/Cores.Codes/Resources/**/*" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)..\..\..\..\Cores.NET\Tools\CompiledBin\DebugHost.exe stop $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)..\..\..\..\Cores.NET\Tools\CompiledBin\DebugHost.exe start $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.0.0-preview8.19405.7" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" Version="3.0.0-preview8.19405.4" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Physical" Version="3.0.0-preview8.19405.4" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Composite" Version="3.0.0-preview8.19405.4" />
  </ItemGroup>
---

※ submodule 経由の場合

---
  <ItemGroup>
    <Compile Remove="Local\**" />
    <Compile Remove="Log\**" />
    <Content Remove="Local\**" />
    <Content Remove="Log\**" />
    <EmbeddedResource Remove="Local\**" />
    <EmbeddedResource Remove="Log\**" />
    <None Remove="Local\**" />
    <None Remove="Log\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.Codes/**/*.cs" />
    <Content Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.Codes/**/*.cshtml" />
    <EmbeddedResource Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.Codes/Resources/**/*" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe stop $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe start $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.0.0-preview8.19405.7" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" Version="3.0.0-preview8.19405.4" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Physical" Version="3.0.0-preview8.19405.4" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Composite" Version="3.0.0-preview8.19405.4" />
  </ItemGroup>
---

・ Properties/launchSettings.json

---
{
  "profiles": {
    "DebugHost Run": {
      "commandName": "Executable",
      "executablePath": "$(ProjectDir)..\\..\\..\\..\\Cores.NET\\\\Tools\\\\CompiledBin\\\\DebugHost.exe",
      "commandLineArgs": "restart $(ProjectName) dotnet exec $(TargetPath) Daemon Test",
      "workingDirectory": ".\\"
    },
    "SingleProcess Debug": {
      "commandName": "Project",
      "commandLineArgs": "Daemon TestDebug /AppId:$(ProjectName)"
    }
  }
}
---

※ submodule 経由の場合

---
{
  "profiles": {
    "DebugHost Run": {
      "commandName": "Executable",
      "executablePath": "$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe",
      "commandLineArgs": "restart $(ProjectName) dotnet exec $(TargetPath) Daemon Test",
      "workingDirectory": ".\\"
    },
    "SingleProcess Debug": {
      "commandName": "Project",
      "commandLineArgs": "Daemon TestDebug /AppId:$(ProjectName)"
    }
  }
}
---

・ Program.cs

以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;
---

Main の内容を以下のように変更
---
            const string appName = "AspNetCore1";

            return StandardMainFunctions.DaemonMain.DoMain(
                new CoresLibOptions(CoresMode.Application,
                    appName: appName,
                    defaultDebugMode: DebugMode.Debug,
                    defaultPrintStatToConsole: false,
                    defaultRecordLeakFullStack: false),
                args: args,
                getDaemonProc: () => new HttpServerDaemon<Startup>(appName, appName, new HttpServerOptions
                {
                    HttpPortsList = 80._SingleList(),
                    HttpsPortsList = 443._SingleList(),
                    UseKestrelWithIPACoreStack = true,
                    DebugKestrelToConsole = false,
                    UseSimpleBasicAuthentication = false,
                    HoldSimpleBasicAuthenticationDatabase = false,
                    AutomaticRedirectToHttpsIfPossible = true,
                }));
---

最初から書いてある CreateWebHostBuilder(args).Build().Run(); および
CreateWebHostBuilder() の実装はコメントアウトする。

・ Startup.cs
以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;

using IPA.Cores.Codes;
using IPA.Cores.Helper.Codes;
using static IPA.Cores.Globals.Codes;
---

Startup クラスに以下を追記

---
readonly HttpServerStartupHelper StartupHelper;
readonly AspNetLib AspNetLib;
---

コンストラクタ:
---
StartupHelper = new HttpServerStartupHelper(configuration);

AspNetLib = new AspNetLib(configuration);
---


ConfigureServices()
---
            // AspNetLib による設定を追加
            AspNetLib.ConfigureServices(StartupHelper, services);

            // 基本的な設定を追加
            StartupHelper.ConfigureServices(services);

            // リクエスト数制限機能を追加
            services.AddHttpRequestRateLimiter<HttpRequestRateLimiterHashKeys.SrcIPAddress>(_ => { });

            ////// Cookie 認証機能を追加
            //EasyCookieAuth.LoginFormMessage.TrySet("ログインが必要です。");
            //EasyCookieAuth.AuthenticationPasswordValidator = StartupHelper.SimpleBasicAuthenticationPasswordValidator;
            //EasyCookieAuth.ConfigureServices(services, !StartupHelper.ServerOptions.AutomaticRedirectToHttpsIfPossible);

            // MVC 機能を追加
            services.AddControllersWithViews()
                .AddViewOptions(opt => opt.HtmlHelperOptions.ClientValidationEnabled = false)
                .AddRazorOptions(opt => AspNetLib.ConfigureRazorOptions(opt))
                .AddRazorRuntimeCompilation(opt => AspNetLib.ConfigureRazorRuntimeCompilationOptions(opt))
                .SetCompatibilityVersion(CompatibilityVersion.Version_3_0);

            // シングルトンサービスの注入
            //services.AddSingleton(new Server());

            // 全ページ共通コンテキストの注入
            //services.AddScoped<PageContext>();
---



Configure() に引数
---
, IHostApplicationLifetime lifetime
---
を追加。

Configure() 
---
            // リクエスト数制限
            app.UseHttpRequestRateLimiter<HttpRequestRateLimiterHashKeys.SrcIPAddress>();

            // wwwroot ディレクトリを static ファイルのルートとして追加
            StartupHelper.AddStaticFileProvider(Env.AppRootDir._CombinePath("wwwroot"));

            // AspNetLib による設定を追加
            AspNetLib.Configure(StartupHelper, app, env);

            // 基本的な設定を追加
            StartupHelper.Configure(app, env);

            // エラーページを追加
            if (StartupHelper.IsDevelopmentMode)
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Home/Error");
            }

            // エラーログを追加
            app.UseHttpExceptionLogger();

            // Static ファイルを追加
            app.UseStaticFiles();

            // ルーティングを有効可 (認証を利用する場合は認証前に呼び出す必要がある)
            app.UseRouting();

            // 認証・認可を実施
            app.UseAuthentication();
            app.UseAuthorization();

            // ルートマップを定義
            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}");
            });

            // クリーンアップ動作を定義
            lifetime.ApplicationStopping.Register(() =>
            {
                //server._DisposeSafe();

                AspNetLib._DisposeSafe();
                StartupHelper._DisposeSafe();
            });
---


Views/_ViewImports.cshtml に以下を追加。

---

@using IPA.Cores.Basic;
@using IPA.Cores.Helper.Basic;
@using static IPA.Cores.Globals.Basic;

@using IPA.Cores.Codes;
@using IPA.Cores.Helper.Codes;
@using static IPA.Cores.Globals.Codes;
---




