新しい ASP.NET Core プロジェクトの作成方法メモ
----------------------------------------------

■ プロジェクトの作成

ソリューションを作成する。

ASP.NET Core Web アプリケーション (C#) を追加する。
    Web アプリケーション (モデル ビュー コントローラ)


■ デバッグ設定の変更

プロファイル「IIS Express」を削除する。

「ブラウザーの起動」を OFF にする。


■ Cores.Lib.Basic.DotNet2.1.Full の追加
ソリューションに
「Cores.Lib.Basic.DotNet2.1.Full\Cores.Lib.Basic.DotNet2.1.Full.csproj」
を追加する。

ASP.NET プロジェクトから Cores.Lib.Basic.DotNet2.1.Full に依存設定をする。


■ Cores.Basic.shproj の追加
ソリューションに
「Cores.Basic.shproj」
を追加する。


■ Cores.AspNet.shproj の追加
ソリューションに
「Cores.AspNet.shproj」
を追加する。


■ ASP.NET Core プロジェクトの編集
・ csproj

以下のプロパティを <PropertyGroup> に追加
---
    <LangVersion>7.3</LangVersion>
    <ServerGarbageCollection>false</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    <GenerateEmbeddedFilesManifest>true</GenerateEmbeddedFilesManifest>
---
※ GC で ServerGC を false にする理由は、.NET Core 2.1 & 2.2 にはバグがあるため。.NET Core 3.0 で改善される予定。


</PropertyGroup> の下に以下を追加
---
  <ItemGroup>
    <Compile Remove="Local\**" />
    <Compile Remove="Log\**" />
    <Content Remove="Local\**" />
    <Content Remove="Log\**" />
    <EmbeddedResource Remove="Local\**" />
    <EmbeddedResource Remove="Log\**" />
    <None Remove="Local\**" />
    <None Remove="Log\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../../../../Cores.NET/Cores.AspNet/**/*.cs" />
    <Content Include="../../../../Cores.NET/Cores.AspNet/**/*.cshtml" />
    <EmbeddedResource Include="../../../../Cores.NET/Cores.AspNet/AspNet.Cores.Resource/**/*" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)..\..\..\..\Cores.NET\Tools\CompiledBin\DebugHost.exe stop $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)..\..\..\..\Cores.NET\Tools\CompiledBin\DebugHost.exe start $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>
---

※ submodule 経由の場合

---
  <ItemGroup>
    <Compile Remove="Local\**" />
    <Compile Remove="Log\**" />
    <Content Remove="Local\**" />
    <Content Remove="Log\**" />
    <EmbeddedResource Remove="Local\**" />
    <EmbeddedResource Remove="Log\**" />
    <None Remove="Local\**" />
    <None Remove="Log\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.AspNet/**/*.cs" />
    <Content Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.AspNet/**/*.cshtml" />
    <EmbeddedResource Include="../submodules/IPA-DN-Cores/Cores.NET/Cores.AspNet/AspNet.Cores.Resource/**/*" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe stop $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <Exec Command="$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe start $(ProjectName) dotnet exec $(TargetPath) Daemon Test" />
  </Target>
---

・ Properties/launchSettings.json

---
{
  "profiles": {
    "DebugHost Run": {
      "commandName": "Executable",
      "executablePath": "$(ProjectDir)..\\..\\..\\..\\Cores.NET\\\\Tools\\\\CompiledBin\\\\DebugHost.exe",
      "commandLineArgs": "restart $(ProjectName) dotnet exec $(TargetPath) Daemon Test",
      "workingDirectory": ".\\"
    },
    "SingleProcess Debug": {
      "commandName": "Project",
      "commandLineArgs": "Daemon TestDebug /AppId:$(ProjectName)"
    }
  }
}
---

※ submodule 経由の場合

---
{
  "profiles": {
    "DebugHost Run": {
      "commandName": "Executable",
      "executablePath": "$(ProjectDir)\\..\\submodules\\IPA-DN-Cores\\Cores.NET\\Tools\\CompiledBin\\DebugHost.exe",
      "commandLineArgs": "restart $(ProjectName) dotnet exec $(TargetPath) Daemon Test",
      "workingDirectory": ".\\"
    },
    "SingleProcess Debug": {
      "commandName": "Project",
      "commandLineArgs": "Daemon TestDebug"
    }
  }
}
---

・ Program.cs

以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;
---

Main の内容を以下のように変更
---
            const string appName = "AspNetCore1";

            return StandardMainFunctions.DaemonMain.DoMain(
                new CoresLibOptions(CoresMode.Application,
                    appName: appName,
                    defaultDebugMode: DebugMode.Debug,
                    defaultPrintStatToConsole: false,
                    defaultRecordLeakFullStack: false),
                args: args,
                getDaemonProc: () => new HttpServerDaemon<Startup>(appName, appName, new HttpServerOptions
                {
                    HttpPortsList = 80._SingleList(),
                    HttpsPortsList = 443._SingleList(),
                    UseKestrelWithIPACoreStack = true,
                    DebugKestrelToConsole = false,
                    UseSimpleBasicAuthentication = false,
                    HoldSimpleBasicAuthenticationDatabase = false,
                }));
---

最初から書いてある CreateWebHostBuilder(args).Build().Run(); および
CreateWebHostBuilder() の実装はコメントアウトする。

・ Startup.cs
以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;

using IPA.Cores.AspNet;
using IPA.Cores.Helper.AspNet;
using static IPA.Cores.Globals.AspNet;
---

Startup クラスに以下を追記

---
readonly HttpServerStartupHelper StartupHelper;
readonly AspNetLib AspNetLib;
---

コンストラクタ:
---
StartupHelper = new HttpServerStartupHelper(configuration);

AspNetLib = new AspNetLib(configuration);
---


ConfigureServices() の一番上:
---
AspNetLib.ConfigureServices(StartupHelper, services);

StartupHelper.ConfigureServices(services);

services.AddHttpRequestRateLimiter<HttpRequestRateLimiterHashKeys.SrcIPAddress>(opt =>
{
});
---

ConfigureServices() の CookiePolicyOptions をコメントアウト

ConfigureServices() の AddMvc() の行を消して以下に置換
---
services.AddMvc()
    .AddViewOptions(opt =>
    {
        opt.HtmlHelperOptions.ClientValidationEnabled = false;
    })
    .AddRazorOptions(opt =>
    {
        AspNetLib.ConfigureRazorOptions(opt);
    })
    .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);
---


Configure() に引数
---
, IApplicationLifetime lifetime
---
を追加。

Configure() の一番上:
---
app.UseHttpRequestRateLimiter<HttpRequestRateLimiterHashKeys.SrcIPAddress>();

// wwwroot directory of this project
StartupHelper.AddStaticFileProvider(Env.AppRootDir._CombinePath("wwwroot"));

AspNetLib.Configure(StartupHelper, app, env);

StartupHelper.Configure(app, env);
---

Configure() の中の

if (env.IsDevelopment())

を

if (Helper.IsDevelopmentMode)

に変更。

app.UseStaticFiles();

の前に

app.UseHttpExceptionLogger();

を追加。

app.UseStaticFiles(); をコメントアウト。
app.UseCookiePolicy(); をコメントアウト。

一番下に
---
lifetime.ApplicationStopping.Register(() =>
{
    AspNetLib._DisposeSafe();
    StartupHelper._DisposeSafe();
});
---

を追加。

Views/_ViewImports.cshtml に以下を追加。

---

@using IPA.Cores.Basic;
@using IPA.Cores.Helper.Basic;
@using static IPA.Cores.Globals.Basic;

@using IPA.Cores.AspNet;
@using IPA.Cores.Helper.AspNet;
@using static IPA.Cores.Globals.AspNet;
---




