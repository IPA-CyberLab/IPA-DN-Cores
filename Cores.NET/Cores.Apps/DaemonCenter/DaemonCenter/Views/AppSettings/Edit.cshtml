@inject Server Server;
@model SingleData<AppSettings>;

@{
    Page.Title = Model.GetOperationTitle();
}

<h2 class="title is-4">@Page.FullTitle</h2>

<form asp-action="Edit">
    <div class="box">
        <div class="content">
            @if (Model.Mode != ModelMode.Add)
            {
                <div class="field is-horizontal">
                    <div class="field-label is-normal">
                        <label class="label">GUID</label>
                    </div>
                    <div class="field-body">
                        <div class="field">
                            <p class="control">
                                <input asp-for="Id" class="input is-success" type="text" readonly>
                            </p>
                        </div>
                    </div>
                </div>
            }

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.AppName)</label>
                </div>
                <div class="field-body">
                    <div class="field">
                        <p class="control">
                            @Html.EditorFor(model => model.Data.AppName, new { htmlAttributes = new { @class = "input is-info" } })
                            <span class="help is-primary" asp-validation-for="Data.AppName"></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.KeepAliveIntervalSecs)</label>
                </div>
                <div class="field-body">
                    <div class="field is-narrow">
                        <p class="control">
                            @Html.EditorFor(model => model.Data.KeepAliveIntervalSecs, new { htmlAttributes = new { @class = "input is-info" } })
                            <span class="help is-primary" asp-validation-for="Data.KeepAliveIntervalSecs"></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.DeadIntervalSecs)</label>
                </div>
                <div class="field-body">
                    <div class="field is-narrow">
                        <p class="control">
                            @Html.EditorFor(model => model.Data.DeadIntervalSecs, new { htmlAttributes = new { @class = "input is-info" } })
                            <span class="help is-primary" asp-validation-for="Data.DeadIntervalSecs"></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.InstanceKeyType)</label>
                </div>
                <div class="field-body">
                    <div class="field is-narrow">
                        <div class="control">
                            <div class="select is-fullwidth">
                                <select asp-for="Data.InstanceKeyType" asp-items="Html.GetEnumSelectList<InstanceKeyType>()" class="input is-info"></select>
                                <span class="help is-primary" asp-validation-for="Data.InstanceKeyType"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.DefaultCommitId)</label>
                </div>
                <div class="field-body">
                    <div class="field is-normal">
                        <p class="control">
                            @Html.EditorFor(model => model.Data.DefaultCommitId, new { htmlAttributes = new { @class = "input is-info" } })
                            <span class="help is-primary" asp-validation-for="Data.DefaultCommitId"></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.DefaultInstanceArgument)</label>
                </div>
                <div class="field-body">
                    <div class="field is-normal">
                        <p class="control">
                            @Html.EditorFor(model => model.Data.DefaultInstanceArgument, new { htmlAttributes = new { @class = "input is-info" } })
                            <span class="help is-primary" asp-validation-for="Data.DefaultInstanceArgument"></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label is-normal">
                    <label class="label">@Html.DisplayNameFor(model => model.Data.DefaultPauseFlag)</label>
                </div>
                <div class="field-body">
                    <div class="field is-narrow">
                        <div class="control">
                            <div class="select is-fullwidth">
                                <select asp-for="Data.DefaultPauseFlag" asp-items="Html.GetEnumSelectList<PauseFlag>()" class="input is-info"></select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="field is-horizontal">
                <div class="field-label">
                    <!-- Left empty for spacing -->
                </div>
                <div class="field-body">
                    <div class="field">
                        <div class="control">
                            <input class="button is-success" type="submit" asp-action="@Model.Mode" value="@Model.GetButtonTitle()">
                            @if (Model.Mode == ModelMode.Edit)
                            {
                                <button type="button" class="button is-danger" onclick="vue.deleteConfirm('@Url.Action(action: "Delete", new { id = Model.Id })')">削除</button>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div asp-validation-summary="All" class="notification is-primary"></div>

        </div>
    </div>
    <a class="is-info" asp-action="Index">App 一覧に戻る</a>
</form>

@section scripts {

    <script type="text/javascript">

        var vue = new Vue({

            methods:
            {
                deleteConfirm: function (url) {
                    this.$dialog.confirm({
                        title: "削除",
                        message: "指定されたオブジェクトを削除します。よろしいですか?",
                        type: "is-danger",
                        onConfirm: () => {
                            window.location.href = url;
                        },
                    });
                },
            },

        });

    </script>

}
