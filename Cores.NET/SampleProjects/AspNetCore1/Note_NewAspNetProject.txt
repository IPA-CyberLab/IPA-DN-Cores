新しい ASP.NET Core プロジェクトの作成方法メモ
----------------------------------------------

■ プロジェクトの作成

ソリューションを作成する。

ASP.NET Core Web アプリケーション (C#) を追加する。
    Web アプリケーション (モデル ビュー コントローラ)


■ デバッグ設定の変更

プロファイル「IIS Express」を削除する。

「ブラウザーの起動」を OFF にする。


■ Cores.Lib.DotNet2.1.Full の追加
ソリューションに
「Cores.Lib.DotNet2.1.Full\Cores.Lib.DotNet2.1.Full.csproj」
を追加する。

ASP.NET プロジェクトから Cores.Lib.DotNet2.1.Full に依存設定をする。

Cores.Lib.DotNet2.1.Full の「InternalsVisibleTo.cs」ファイルを必要に応じて編集する。


■ Cores.Basic.shproj の追加
ソリューションに
「Cores.Basic.shproj」
を追加する。


■ ASP.NET Core プロジェクトの編集
・ csproj

以下のプロパティを <PropertyGroup> に追加
---
    <LangVersion>7.3</LangVersion>
    <ServerGarbageCollection>false</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
---
※ GC で ServerGC を false にする理由は、.NET Core 2.1 & 2.2 にはバグがあるため。.NET Core 3.0 で改善される予定。

</PropertyGroup> の下に以下を追加
---
  <ItemGroup>
    <Compile Remove="Local\**" />
    <Compile Remove="Log\**" />
    <Content Remove="Local\**" />
    <Content Remove="Log\**" />
    <EmbeddedResource Remove="Local\**" />
    <EmbeddedResource Remove="Log\**" />
    <None Remove="Local\**" />
    <None Remove="Log\**" />
  </ItemGroup>
---

・ Properties/launchSettings.json
---
{
  "profiles": {
    "AspNet": {
      "commandName": "Project"
    },
    "AspNet /Test": {
      "commandName": "Project",
      "commandLineArgs": "Daemon test"
    }
  }
}
---

・ Program.cs

以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;
---

Main の内容を以下のように変更
---
            const string appName = "AspNetCore1";

            return StandardMainFunctions.DaemonMain.DoMain(new CoresLibOptions(CoresMode.Application, appName, DebugMode.Debug, false, false), args,
                getDaemonProc: () => new HttpServerDaemon<Startup>(appName, appName, new HttpServerOptions
                {
                    HttpPortsList = 80._SingleList(),
                    HttpsPortsList = 443._SingleList(),
                    UseKestrelWithIPACoreStack = true,
                    DebugKestrelToConsole = false,
                }));
---

最初から書いてある CreateWebHostBuilder(args).Build().Run(); および
CreateWebHostBuilder() の実装はコメントアウトする。

・ Startup.cs
以下を追加
---
using IPA.Cores.Basic;
using IPA.Cores.Helper.Basic;
using static IPA.Cores.Globals.Basic;
---

Startup クラスに以下を追記

---
internal HttpServerStartupHelper Helper { get; }

コンストラクタ:
Helper = new HttpServerStartupHelper(configuration);

ConfigureServices() の一番上:
Helper.ConfigureServices(services);

Configure() の一番上:
Helper.Configure(app, env);

Configure() の中の

if (env.IsDevelopment())

を

if (Helper.IsDevelopmentMode)

に変更。

app.UseStaticFiles();

の前に

app.UseHttpExceptionLogger();

を追加。

コメントアウト

//services.Configure<CookiePolicyOptions>(options =>
//{
//    // This lambda determines whether user consent for non-essential cookies is needed for a given request.
//    options.CheckConsentNeeded = context => true;
//    options.MinimumSameSitePolicy = SameSiteMode.None;
//});

//app.UseCookiePolicy();

---




